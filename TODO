Thinh's ideas:
- FOV on acceleration
- Compass
- Increase strength on strafe
- Y-axis inversion option
- More stuff in the sky for orientation
- Reduced rotation speed, cap

- Consider having an optimized-output build mode that does some of the following:
	- Enables optimization flags (compare -O2 with -O3 to see if latter helps...)
	- Builds the entire project at once to see if g++'s unit-at-a-time thing helps
	- Uses g++'s profiling mechanism with some kind of demo

- Come up with a simple way to do documentation; doxygen's usual format is a pain in the ass
- Pass boost::shared_ptr by const reference wherever possible
- Make the naming of variables consistent (in particular, use underscore prefix for members)
- Make sure mipmapping and texture compression are both actually working
- Use a test texture instead of a test color for untextured faces
- Consider using texture packing
- Consider using three VBOs: one for very static geometry, one for rigid but movable geometry, and one for dynamic geometry
	- If using above: have the ORE file pre-transform static geometry
- Have the ORE file include pre-calculated information about how much memory must be allocated for the VBOs
- Show the loading animation
- Include all resources in the ORE file (including loading anim, title screen image, sounds, etc)
- Separate out the ORE file into its own repository
- Figure out why SDL won't restore the original screen resolution! (Grumble, mumble)
- Why doesn't vsync work?
- Allow video mode to be reinitialized without having to reinit the entire display module

- Maybe when it is necessary to tilt about z axis while running, I should add some x linear force to simulate banking
	Banking would actually occur, since one foot would be pushing sideways to adjust orientation
